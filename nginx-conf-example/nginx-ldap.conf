
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
#    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


   ldap_server ad_1 {
      # user search base.
      url "ldap://<LDAP_SERVER_HOST>:<LDAP_SERVER_PORT>/DC=dimed,DC=local?sAMAccountName?sub?(objectClass=person)";
      # bind as
      binddn "CN=<USER_LOGIN_LDAP>,OU=ContasServicos,OU=Suporte,OU=Informatica,OU=Eldorado,OU=Dimed,DC=dimed,DC=local";
      # bind pw
      binddn_passwd "<USER_PASSWORD_LDAP>";
      # group attribute name which contains member object
      #group_attribute member;
      # search for full DN in member object
      group_attribute_is_dn on;
      # matching algorithm (any / all)
      satisfy any;
      # list of allowed groups
      #require group "CN=Admins,OU=My Security Groups,DC=company,DC=com";
      #require group "CN=New York Users,OU=My Security Groups,DC=company,DC=com";
      # list of allowed users
      # require 'valid_user' cannot be used together with 'user' as valid user is a superset
      # require valid_user;
      #require user "CN=Batman,OU=Users,OU=New York Office,OU=Offices,DC=company,DC=com";
      #require user "CN=Robocop,OU=Users,OU=New York Office,OU=Offices,DC=company,DC=com";
    }


    server {
        listen       80;
        server_name  localhost;
        auth_ldap "Closed content";
        auth_ldap_servers ad_1;


        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
